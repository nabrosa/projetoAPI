{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2025-09-14T12:44:53.353Z",
    "end": "2025-09-14T12:44:53.462Z",
    "duration": 109,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c1f2da20-c880-411e-888e-c0fb0cc9863c",
      "title": "",
      "fullFile": "C:\\Users\\nabea\\pos_pgats\\projetoAPI\\test\\graphql\\external\\scheduleExternal.test.js",
      "file": "\\test\\graphql\\external\\scheduleExternal.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0666ab9f-181d-496d-9e1f-42351c818896",
          "title": "Schedule Controller",
          "fullFile": "C:\\Users\\nabea\\pos_pgats\\projetoAPI\\test\\graphql\\external\\scheduleExternal.test.js",
          "file": "\\test\\graphql\\external\\scheduleExternal.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a2f64151-c6a9-469c-b094-f449ce0ce665",
              "title": "POST /schedule",
              "fullFile": "C:\\Users\\nabea\\pos_pgats\\projetoAPI\\test\\graphql\\external\\scheduleExternal.test.js",
              "file": "\\test\\graphql\\external\\scheduleExternal.test.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"POST /schedule\"",
                  "fullTitle": "Schedule Controller POST /schedule \"before each\" hook in \"POST /schedule\"",
                  "timedOut": false,
                  "duration": 5,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const loginUser = require('../fixture/requisicoes/login/loginUser.json');\nconst respostaLogin = await request('http://localhost:4000/graphql')\n    .post('')\n    .send(loginUser);\ntoken = respostaLogin.body.data.login.token;",
                  "err": {},
                  "uuid": "850c72fc-901e-420b-ac7c-c27c1a03412f",
                  "parentUUID": "a2f64151-c6a9-469c-b094-f449ce0ce665",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Quando informo dia e horário recebo 201",
                  "fullTitle": "Schedule Controller POST /schedule Quando informo dia e horário recebo 201",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const registerSchedule = require('../fixture/requisicoes/schedule/registerSchedule.json')\nconst respostaAgendamento = await request(\"http://localhost:4000/graphql\")\n    .post('')\n    .set('Authorization', `Bearer ${token}`)\n    .send(registerSchedule);\nexpect(respostaAgendamento.status).to.equal(200);\nexpect(respostaAgendamento.body.data.registerSchedule).to.equal('Schedule registered successfully.');",
                  "err": {},
                  "uuid": "e0550309-c4ba-451c-9872-ba701848915b",
                  "parentUUID": "a2f64151-c6a9-469c-b094-f449ce0ce665",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validar a obrigatoriedade dos campos quando: Não informar Data e Horário",
                  "fullTitle": "Schedule Controller POST /schedule Validar a obrigatoriedade dos campos quando: Não informar Data e Horário",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const respostaAgendamento = await request(\"http://localhost:4000/graphql\")\n.post('')\n.set('Authorization', `Bearer ${token}`)\n.send(teste.registerSchedule);\n\n            expect(respostaAgendamento.body.errors[0].message).to.equal(teste.mensagemEsperada);",
                  "err": {},
                  "uuid": "538a2067-8935-4290-8bae-3d9119aa4bfb",
                  "parentUUID": "a2f64151-c6a9-469c-b094-f449ce0ce665",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validar a obrigatoriedade dos campos quando: Não informar Data",
                  "fullTitle": "Schedule Controller POST /schedule Validar a obrigatoriedade dos campos quando: Não informar Data",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const respostaAgendamento = await request(\"http://localhost:4000/graphql\")\n.post('')\n.set('Authorization', `Bearer ${token}`)\n.send(teste.registerSchedule);\n\n            expect(respostaAgendamento.body.errors[0].message).to.equal(teste.mensagemEsperada);",
                  "err": {},
                  "uuid": "0d45ee57-fb6d-4761-a4e2-79e778176217",
                  "parentUUID": "a2f64151-c6a9-469c-b094-f449ce0ce665",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validar a obrigatoriedade dos campos quando: Não informar horário",
                  "fullTitle": "Schedule Controller POST /schedule Validar a obrigatoriedade dos campos quando: Não informar horário",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const respostaAgendamento = await request(\"http://localhost:4000/graphql\")\n.post('')\n.set('Authorization', `Bearer ${token}`)\n.send(teste.registerSchedule);\n\n            expect(respostaAgendamento.body.errors[0].message).to.equal(teste.mensagemEsperada);",
                  "err": {},
                  "uuid": "91cb22a4-e4f7-4c3b-9b31-8b3518b19aaa",
                  "parentUUID": "a2f64151-c6a9-469c-b094-f449ce0ce665",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e0550309-c4ba-451c-9872-ba701848915b",
                "538a2067-8935-4290-8bae-3d9119aa4bfb",
                "0d45ee57-fb6d-4761-a4e2-79e778176217",
                "91cb22a4-e4f7-4c3b-9b31-8b3518b19aaa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 24,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}