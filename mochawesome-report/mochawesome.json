{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2025-09-17T11:34:52.980Z",
    "end": "2025-09-17T11:34:53.129Z",
    "duration": 149,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fe928d00-a728-46a0-a418-5013603a240a",
      "title": "",
      "fullFile": "C:\\Users\\nabea\\pos_pgats\\projetoAPI\\test\\graphql\\external\\scheduleExternal.test.js",
      "file": "\\test\\graphql\\external\\scheduleExternal.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "93f8508d-ef08-4a3a-a308-4432e5fbb0d0",
          "title": "Schedule Controller",
          "fullFile": "C:\\Users\\nabea\\pos_pgats\\projetoAPI\\test\\graphql\\external\\scheduleExternal.test.js",
          "file": "\\test\\graphql\\external\\scheduleExternal.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2ccab66d-fc4e-4504-9160-74160961838e",
              "title": "POST /schedule",
              "fullFile": "C:\\Users\\nabea\\pos_pgats\\projetoAPI\\test\\graphql\\external\\scheduleExternal.test.js",
              "file": "\\test\\graphql\\external\\scheduleExternal.test.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"POST /schedule\"",
                  "fullTitle": "Schedule Controller POST /schedule \"before each\" hook in \"POST /schedule\"",
                  "timedOut": false,
                  "duration": 4,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const loginUser = require('../fixture/requisicoes/login/loginUser.json');\nconst respostaLogin = await request(process.env.BASE_URL_GRAPHQL)\n    .post('')\n    .send(loginUser);\ntoken = respostaLogin.body.data.login.token;",
                  "err": {},
                  "uuid": "26830516-d82c-4a97-a773-38926e97bed8",
                  "parentUUID": "2ccab66d-fc4e-4504-9160-74160961838e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Quando informo dia e horário tenho sucesso",
                  "fullTitle": "Schedule Controller POST /schedule Quando informo dia e horário tenho sucesso",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const registerSchedule = require('../fixture/requisicoes/schedule/registerSchedule.json')\nconst respostaAgendamento = await request(process.env.BASE_URL_GRAPHQL)\n    .post('')\n    .set('Authorization', `Bearer ${token}`)\n    .send(registerSchedule);\nexpect(respostaAgendamento.status).to.equal(200);\nexpect(respostaAgendamento.body.data.registerSchedule).to.equal('Schedule registered successfully.');",
                  "err": {},
                  "uuid": "d6207722-4b15-4feb-b2fc-bbdd29eb8d00",
                  "parentUUID": "2ccab66d-fc4e-4504-9160-74160961838e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validar a obrigatoriedade dos campos quando: Não informar Data e Horário",
                  "fullTitle": "Schedule Controller POST /schedule Validar a obrigatoriedade dos campos quando: Não informar Data e Horário",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const respostaAgendamento = await request(process.env.BASE_URL_GRAPHQL)\n.post('')\n.set('Authorization', `Bearer ${token}`)\n.send(teste.registerSchedule);\n\n            expect(respostaAgendamento.body.errors[0].message).to.equal(teste.mensagemEsperada);",
                  "err": {},
                  "uuid": "76a7dc9f-d25f-4ef8-91e9-03ef4a6c1565",
                  "parentUUID": "2ccab66d-fc4e-4504-9160-74160961838e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validar a obrigatoriedade dos campos quando: Não informar Data",
                  "fullTitle": "Schedule Controller POST /schedule Validar a obrigatoriedade dos campos quando: Não informar Data",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const respostaAgendamento = await request(process.env.BASE_URL_GRAPHQL)\n.post('')\n.set('Authorization', `Bearer ${token}`)\n.send(teste.registerSchedule);\n\n            expect(respostaAgendamento.body.errors[0].message).to.equal(teste.mensagemEsperada);",
                  "err": {},
                  "uuid": "e2dc88b2-3db1-4692-9786-9e698aa1521d",
                  "parentUUID": "2ccab66d-fc4e-4504-9160-74160961838e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Validar a obrigatoriedade dos campos quando: Não informar horário",
                  "fullTitle": "Schedule Controller POST /schedule Validar a obrigatoriedade dos campos quando: Não informar horário",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const respostaAgendamento = await request(process.env.BASE_URL_GRAPHQL)\n.post('')\n.set('Authorization', `Bearer ${token}`)\n.send(teste.registerSchedule);\n\n            expect(respostaAgendamento.body.errors[0].message).to.equal(teste.mensagemEsperada);",
                  "err": {},
                  "uuid": "9cc2ba54-09b5-4576-88c8-008d13c2f355",
                  "parentUUID": "2ccab66d-fc4e-4504-9160-74160961838e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d6207722-4b15-4feb-b2fc-bbdd29eb8d00",
                "76a7dc9f-d25f-4ef8-91e9-03ef4a6c1565",
                "e2dc88b2-3db1-4692-9786-9e698aa1521d",
                "9cc2ba54-09b5-4576-88c8-008d13c2f355"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 24,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.7.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}